{"ast":null,"code":"import _slicedToArray from \"/home/anush/Documents/Projects/React Js/splitwise/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/anush/Documents/Projects/React Js/splitwise/src/Components/Dashboard/ModalExpense.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Button from '../Button';\nimport Input from '../Input';\nimport ImgIcon from './general.png';\nimport axios from 'axios';\n\nfunction ModalExpense(props) {\n  const history = useHistory();\n\n  const _useState = useState({\n    email: \"\",\n    description: \"\",\n    amount: \"\"\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        modalInput = _useState2[0],\n        setModalInput = _useState2[1];\n\n  function handleModalVisibility() {\n    const currentViewModal = props.viewModal.map(item => {\n      item.modal = false;\n      return item;\n    });\n    props.method(currentViewModal);\n  }\n\n  const notify = message => {\n    toast(message, {\n      position: toast.POSITION.BOTTOM_RIGHT,\n      className: 'theme-background-alert',\n      progressClassName: 'theme-progress-bar',\n      autoClose: 2000\n    });\n  };\n\n  const notify2 = message => {\n    toast(message, {\n      position: toast.POSITION.BOTTOM_RIGHT,\n      className: 'theme-background',\n      progressClassName: 'theme-progress-bar',\n      autoClose: 2000\n    });\n  };\n\n  function handleEmail(event) {\n    setModalInput(prevUsers => {\n      prevUsers.email = event.target.value;\n      return prevUsers;\n    });\n  }\n\n  function handleDescrption(event) {\n    setModalInput(prevUsers => {\n      prevUsers.description = event.target.value;\n      return prevUsers;\n    });\n  }\n\n  function handleAmount(event) {\n    setModalInput(prevUsers => {\n      prevUsers.amount = event.target.value;\n      return prevUsers;\n    });\n  }\n\n  const _useState3 = useState(true),\n        _useState4 = _slicedToArray(_useState3, 2),\n        empty = _useState4[0],\n        setEmpty = _useState4[1];\n\n  function setEmptyInput() {\n    if (modalInput.description.length > 0 && modalInput.email.length > 0 && modalInput.amount.length) setEmpty(false);\n  }\n\n  function addExpense() {\n    // console.log(props.user)\n    var arr = [];\n\n    if (empty) {\n      notify(\"Please fill all inputs.\");\n    } else {\n      for (let i in modalInput) {\n        arr.push(modalInput[i]);\n      }\n\n      arr.push(props.user[0]);\n      arr.push(props.user[1]); // console.log(arr)\n\n      axios.post(`http://localhost:4000/add-expense`, arr).then(res => {\n        notify2(res);\n      });\n    }\n\n    setTimeout(() => {\n      history.push(\"/home/dashboard\");\n      window.location.reload(true);\n    }, 2800); // handleDashVisibility()\n  }\n\n  useEffect(() => {\n    toast.configure({\n      autoClose: 100,\n      draggable: false //etc you get the idea\n\n    });\n    toast.configure();\n  }, []);\n  return React.createElement(\"div\", {\n    style: {\n      display: props.viewModal[3].modal ? \"block\" : \"none\"\n    },\n    className: \"modal-overlay\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"add-expense-modal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"add-expense-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, \"Add an expense\"), React.createElement(Button, {\n    class: \"close-btn\",\n    name: \"x\",\n    onclickmeth: handleModalVisibility,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"add-expense-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"add-expense-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"add-expense-3-p\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, \"With you and:\"), React.createElement(Input, {\n    class: \"input-3\",\n    placeHolder: \"Enter names or email addresses\",\n    method: handleEmail,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"add-expense-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      display: \"flex\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"image-icon-exp\",\n    src: ImgIcon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"add-expense-4-inside\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(Input, {\n    class: \"input-4\",\n    placeHolder: \"Enter a description\",\n    method: handleDescrption,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    className: \"input-5\",\n    type: \"number\",\n    placeholder: \"0.00\",\n    onChange: handleAmount,\n    onBlur: setEmptyInput,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: \"dollar-sym\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, \"$\"))), React.createElement(\"p\", {\n    className: \"exp-info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, \"Paid by \", React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, \"you\"), \" and split \", React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, \"equally.\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  })), \"($ /person)\")), React.createElement(\"div\", {\n    style: {\n      padding: \"10px\",\n      textAlign: \"right\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(Button, {\n    class: \"exp-btn\",\n    name: \"Cancel\",\n    onclickmeth: handleModalVisibility,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }), React.createElement(Button, {\n    class: \"exp-btn-2\",\n    name: \"Save\",\n    onclickmeth: addExpense,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  })))), React.createElement(ToastContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }));\n}\n\nexport default ModalExpense;","map":{"version":3,"sources":["/home/anush/Documents/Projects/React Js/splitwise/src/Components/Dashboard/ModalExpense.js"],"names":["React","useState","useEffect","useHistory","ToastContainer","toast","Button","Input","ImgIcon","axios","ModalExpense","props","history","email","description","amount","modalInput","setModalInput","handleModalVisibility","currentViewModal","viewModal","map","item","modal","method","notify","message","position","POSITION","BOTTOM_RIGHT","className","progressClassName","autoClose","notify2","handleEmail","event","prevUsers","target","value","handleDescrption","handleAmount","empty","setEmpty","setEmptyInput","length","addExpense","arr","i","push","user","post","then","res","setTimeout","window","location","reload","configure","draggable","display","padding","textAlign"],"mappings":"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","sourcesContent":["import React, {useState,useEffect} from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Button from '../Button'\nimport Input from '../Input'\nimport ImgIcon from './general.png'\nimport axios from 'axios'\n\nfunction ModalExpense(props){\n    const history = useHistory();\n    const [modalInput,setModalInput] = useState ({\n        email:\"\",\n        description:\"\",\n        amount: \"\"\n    })\n    function handleModalVisibility(){\n        const currentViewModal = props.viewModal.map((item) =>{\n            item.modal = false\n            return item\n        })\n        props.method(currentViewModal)\n    }\n    const notify = (message) => {\n        toast(message, {\n            position: toast.POSITION.BOTTOM_RIGHT,\n            className:'theme-background-alert',\n            progressClassName: 'theme-progress-bar',\n            autoClose: 2000\n        });\n    }\n    const notify2 = (message) => {\n        toast(message, {\n            position: toast.POSITION.BOTTOM_RIGHT,\n            className:'theme-background',\n            progressClassName: 'theme-progress-bar',\n            autoClose: 2000\n        });\n    }\n    function handleEmail(event){\n        setModalInput(prevUsers=>{\n            prevUsers.email = event.target.value;\n            return prevUsers\n          })\n    }\n    function handleDescrption(event){\n        setModalInput(prevUsers=>{\n            prevUsers.description = event.target.value;\n            return prevUsers\n          })\n    }\n    function handleAmount(event){\n        setModalInput(prevUsers=>{\n            prevUsers.amount = event.target.value;\n            return prevUsers\n        })\n    }\n    const [empty,setEmpty] = useState(true)\n    function setEmptyInput(){\n        if(modalInput.description.length >0 && modalInput.email.length >0 && modalInput.amount.length)\n            setEmpty(false)\n    }\n    function addExpense(){\n        // console.log(props.user)\n        var arr = []\n        if(empty){\n            notify(\"Please fill all inputs.\")\n        }\n        else{\n            for(let i in modalInput){\n                arr.push(modalInput[i])\n            }\n            arr.push(props.user[0])\n            arr.push(props.user[1])\n            // console.log(arr)\n            axios.post(`http://localhost:4000/add-expense`,arr)\n                .then(res=>{\n                    notify2(res)\n                })\n        }\n        setTimeout(() => {\n            history.push(\"/home/dashboard\")\n            window.location.reload(true)\n        }, 2800);\n        // handleDashVisibility()\n    }\n    useEffect(() => {\n        toast.configure({\n            autoClose: 100,\n            draggable: false,\n            //etc you get the idea\n          });\n          toast.configure()\n    }, [])\n    return(\n        <div style={{display:props.viewModal[3].modal?\"block\":\"none\" }} className=\"modal-overlay\">\n            <div className=\"add-expense-modal\">\n                <div className=\"add-expense-1\">\n                    <p>Add an expense</p>\n                    <Button class=\"close-btn\" name=\"x\" onclickmeth={handleModalVisibility}/>\n                </div>\n                <div className=\"add-expense-2\">\n                    <div className=\"add-expense-3\">\n                        <p className=\"add-expense-3-p\">With you and:</p>\n                        <Input class=\"input-3\" placeHolder=\"Enter names or email addresses\" method={handleEmail}/>\n                    </div>\n                    <div className=\"add-expense-4\">\n                        <div style={{display:\"flex\"}}>\n                            <img className=\"image-icon-exp\" src={ImgIcon} />\n                            <div className=\"add-expense-4-inside\">\n                                <Input class=\"input-4\" placeHolder=\"Enter a description\" method={handleDescrption}/>\n                                <input className=\"input-5\" type=\"number\" placeholder=\"0.00\" onChange={handleAmount} onBlur={setEmptyInput}/><span className=\"dollar-sym\">$</span>\n                            </div>\n                        </div>\n                    <p className=\"exp-info\">Paid by <span>you</span> and split <span>equally.<br/></span>($ /person)</p>\n                    </div>\n                    <div style={{padding:\"10px\",textAlign:\"right\"}}>\n                        <Button class=\"exp-btn\" name=\"Cancel\" onclickmeth={handleModalVisibility} />\n                        <Button class=\"exp-btn-2\" name=\"Save\" onclickmeth={addExpense} />\n                    </div>\n                </div> \n            </div>\n            <ToastContainer />\n        </div>\n    )\n}\n\nexport default ModalExpense"]},"metadata":{},"sourceType":"module"}