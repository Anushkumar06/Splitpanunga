{"ast":null,"code":"import _slicedToArray from \"/home/anush/Documents/Projects/React Js/splitwise/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/anush/Documents/Projects/React Js/splitwise/src/Components/Dashboard/ModalExpense.js\";\nimport React, { useState, useEffect } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Button from '../Button';\nimport Input from '../Input';\nimport ImgIcon from './general.png';\nimport axios from 'axios';\n\nfunction ModalExpense(props) {\n  const _useState = useState({\n    email: \"\",\n    description: \"\",\n    amount: \"\"\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        modalInput = _useState2[0],\n        setModalInput = _useState2[1];\n\n  function handleModalVisibility() {\n    const currentViewModal = props.viewModal.map(item => {\n      item.modal = false;\n      return item;\n    });\n    props.method(currentViewModal);\n  }\n\n  const notify = message => {\n    toast(message, {\n      position: toast.POSITION.BOTTOM_RIGHT,\n      autoClose: 2000\n    });\n  }; // function handleDashVisibility(){\n  //     const currentViewModal = props.viewModal.map((item) =>{\n  //         if(item.visibility === true){\n  //             item.visibility = !item.visibility\n  //         }\n  //         if(item.dash === \"dash-exp\"){\n  //             item.visibility = !item.visibility\n  //         }\n  //         item.modal = false\n  //         return item\n  //     })\n  //     props.method(currentViewModal)\n  // }\n\n\n  function handleEmail(event) {\n    setModalInput(prevUsers => {\n      prevUsers.email = event.target.value;\n      return prevUsers;\n    });\n  }\n\n  function handleDescrption(event) {\n    setModalInput(prevUsers => {\n      prevUsers.description = event.target.value;\n      return prevUsers;\n    });\n  }\n\n  const _useState3 = useState(true),\n        _useState4 = _slicedToArray(_useState3, 2),\n        empty = _useState4[0],\n        setEmpty = _useState4[1];\n\n  function handleAmount(event) {\n    setModalInput(prevUsers => {\n      prevUsers.amount = event.target.value;\n      return prevUsers;\n    });\n    setEmpty(false);\n  }\n\n  function addExpense() {\n    // console.log(props.user)\n    var arr = [];\n\n    if (empty) {\n      notify(\"Please fill all inputs.\");\n    } else {\n      for (let i in modalInput) {\n        arr.push(modalInput[i]);\n      }\n\n      arr.push(props.user[0]);\n      arr.push(props.user[1]); // console.log(arr)\n\n      axios.post(`http://localhost:4000/add-expense`, arr).then(res => {\n        console.log(res);\n      });\n      window.location.reload(false);\n    } // handleDashVisibility()\n\n  }\n\n  useEffect(() => {\n    toast.configure({\n      autoClose: 100,\n      draggable: false //etc you get the idea\n\n    });\n    toast.configure();\n  }, []);\n  return React.createElement(\"div\", {\n    style: {\n      display: props.viewModal[3].modal ? \"block\" : \"none\"\n    },\n    className: \"modal-overlay\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"add-expense-modal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"add-expense-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, \"Add an expense\"), React.createElement(Button, {\n    class: \"close-btn\",\n    name: \"x\",\n    onclickmeth: handleModalVisibility,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"add-expense-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"add-expense-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"add-expense-3-p\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, \"With you and:\"), React.createElement(Input, {\n    class: \"input-3\",\n    placeHolder: \"Enter names or email addresses\",\n    method: handleEmail,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"add-expense-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      display: \"flex\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"image-icon-exp\",\n    src: ImgIcon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"add-expense-4-inside\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(Input, {\n    class: \"input-4\",\n    placeHolder: \"Enter a description\",\n    method: handleDescrption,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    className: \"input-5\",\n    type: \"number\",\n    placeholder: \"0.00\",\n    onChange: handleAmount,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: \"dollar-sym\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, \"$\"))), React.createElement(\"p\", {\n    className: \"exp-info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, \"Paid by \", React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, \"you\"), \" and split \", React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, \"equally.\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  })), \"($ /person)\")), React.createElement(\"div\", {\n    style: {\n      padding: \"10px\",\n      textAlign: \"right\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(Button, {\n    class: \"exp-btn\",\n    name: \"Cancel\",\n    onclickmeth: handleModalVisibility,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }), React.createElement(Button, {\n    class: \"exp-btn-2\",\n    name: \"Save\",\n    onclickmeth: addExpense,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  })))), React.createElement(ToastContainer, {\n    toastClassName: \"black-background\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }));\n}\n\nexport default ModalExpense;","map":{"version":3,"sources":["/home/anush/Documents/Projects/React Js/splitwise/src/Components/Dashboard/ModalExpense.js"],"names":["React","useState","useEffect","ToastContainer","toast","Button","Input","ImgIcon","axios","ModalExpense","props","email","description","amount","modalInput","setModalInput","handleModalVisibility","currentViewModal","viewModal","map","item","modal","method","notify","message","position","POSITION","BOTTOM_RIGHT","autoClose","handleEmail","event","prevUsers","target","value","handleDescrption","empty","setEmpty","handleAmount","addExpense","arr","i","push","user","post","then","res","console","log","window","location","reload","configure","draggable","display","padding","textAlign"],"mappings":"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","sourcesContent":["import React, {useState,useEffect} from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Button from '../Button'\nimport Input from '../Input'\nimport ImgIcon from './general.png'\nimport axios from 'axios'\n\nfunction ModalExpense(props){\n    const [modalInput,setModalInput] = useState ({\n        email:\"\",\n        description:\"\",\n        amount: \"\"\n    })\n    function handleModalVisibility(){\n        const currentViewModal = props.viewModal.map((item) =>{\n            item.modal = false\n            return item\n        })\n        props.method(currentViewModal)\n    }\n    const notify = (message) => {\n        toast(message, {\n            position: toast.POSITION.BOTTOM_RIGHT,\n            autoClose: 2000\n        });\n    }\n    // function handleDashVisibility(){\n    //     const currentViewModal = props.viewModal.map((item) =>{\n    //         if(item.visibility === true){\n    //             item.visibility = !item.visibility\n    //         }\n    //         if(item.dash === \"dash-exp\"){\n    //             item.visibility = !item.visibility\n    //         }\n    //         item.modal = false\n    //         return item\n    //     })\n    //     props.method(currentViewModal)\n    // }\n    function handleEmail(event){\n        setModalInput(prevUsers=>{\n            prevUsers.email = event.target.value;\n            return prevUsers\n          })\n    }\n    function handleDescrption(event){\n        setModalInput(prevUsers=>{\n            prevUsers.description = event.target.value;\n            return prevUsers\n          })\n    }\n    const [empty,setEmpty] = useState(true)\n    function handleAmount(event){\n        setModalInput(prevUsers=>{\n            prevUsers.amount = event.target.value;\n            return prevUsers\n          })\n          setEmpty(false)\n    }\n    function addExpense(){\n        // console.log(props.user)\n        var arr = []\n        if(empty){\n            notify(\"Please fill all inputs.\")\n        }\n        else{\n            for(let i in modalInput){\n                arr.push(modalInput[i])\n            }\n            arr.push(props.user[0])\n            arr.push(props.user[1])\n            // console.log(arr)\n            axios.post(`http://localhost:4000/add-expense`,arr)\n                .then(res=>{\n                    console.log(res)\n                })\n            window.location.reload(false)\n        }\n        // handleDashVisibility()\n    }\n    useEffect(() => {\n        toast.configure({\n            autoClose: 100,\n            draggable: false,\n            //etc you get the idea\n          });\n          toast.configure()\n    }, [])\n    return(\n        <div style={{display:props.viewModal[3].modal?\"block\":\"none\" }} className=\"modal-overlay\">\n            <div className=\"add-expense-modal\">\n                <div className=\"add-expense-1\">\n                    <p>Add an expense</p>\n                    <Button class=\"close-btn\" name=\"x\" onclickmeth={handleModalVisibility}/>\n                </div>\n                <div className=\"add-expense-2\">\n                    <div className=\"add-expense-3\">\n                        <p className=\"add-expense-3-p\">With you and:</p>\n                        <Input class=\"input-3\" placeHolder=\"Enter names or email addresses\" method={handleEmail}/>\n                    </div>\n                    <div className=\"add-expense-4\">\n                        <div style={{display:\"flex\"}}>\n                            <img className=\"image-icon-exp\" src={ImgIcon} />\n                            <div className=\"add-expense-4-inside\">\n                                <Input class=\"input-4\" placeHolder=\"Enter a description\" method={handleDescrption}/>\n                                <input className=\"input-5\" type=\"number\" placeholder=\"0.00\" onChange={handleAmount}/><span className=\"dollar-sym\">$</span>\n                            </div>\n                        </div>\n                    <p className=\"exp-info\">Paid by <span>you</span> and split <span>equally.<br/></span>($ /person)</p>\n                    </div>\n                    <div style={{padding:\"10px\",textAlign:\"right\"}}>\n                        <Button class=\"exp-btn\" name=\"Cancel\" onclickmeth={handleModalVisibility} />\n                        <Button class=\"exp-btn-2\" name=\"Save\" onclickmeth={addExpense} />\n                    </div>\n                </div> \n            </div>\n            <ToastContainer toastClassName='black-background' />\n        </div>\n    )\n}\n\nexport default ModalExpense"]},"metadata":{},"sourceType":"module"}