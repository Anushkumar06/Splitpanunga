{"ast":null,"code":"import _slicedToArray from \"/home/anush/Documents/Projects/React Js/splitwise/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/anush/Documents/Projects/React Js/splitwise/src/Components/Dashboard/Summary/Summary.js\";\nimport React, { useState } from 'react';\nimport SummaryHeader from './SummaryHeader';\nimport SummaryList from './SummaryList/SummaryList';\nimport SummaryChart from './SummaryChart/SummaryChart';\n\nfunction Summary(props) {\n  const _useState = useState([{\n    list: true,\n    chart: false\n  }]),\n        _useState2 = _slicedToArray(_useState, 2),\n        toggle = _useState2[0],\n        setToggle = _useState2[1];\n\n  function handeToggle(newToggle) {\n    setToggle(newToggle);\n  }\n\n  return React.createElement(\"div\", {\n    className: \"summary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(SummaryHeader, {\n    viewToggle: toggle,\n    handTog: handeToggle,\n    userData: props.userExpenses,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }), React.createElement(SummaryList, {\n    show: toggle[0],\n    userData: props.userExpenses,\n    currentUser: props.users[1],\n    method4: props.method4,\n    userMethod: props.userMethod,\n    meth: props.meth,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }), React.createElement(SummaryChart, {\n    show: toggle[0],\n    userData: props.userExpenses,\n    currentUser: props.users[1],\n    method3: props.method4,\n    method: props.userMethod,\n    method2: props.meth,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }));\n}\n\nexport default Summary;","map":{"version":3,"sources":["/home/anush/Documents/Projects/React Js/splitwise/src/Components/Dashboard/Summary/Summary.js"],"names":["React","useState","SummaryHeader","SummaryList","SummaryChart","Summary","props","list","chart","toggle","setToggle","handeToggle","newToggle","userExpenses","users","method4","userMethod","meth"],"mappings":";;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,YAAP,MAAyB,6BAAzB;;AAGA,SAASC,OAAT,CAAiBC,KAAjB,EAAuB;AAAA,oBACQL,QAAQ,CAAC,CAAC;AACjCM,IAAAA,IAAI,EAAC,IAD4B;AAEjCC,IAAAA,KAAK,EAAC;AAF2B,GAAD,CAAD,CADhB;AAAA;AAAA,QACZC,MADY;AAAA,QACLC,SADK;;AAMnB,WAASC,WAAT,CAAqBC,SAArB,EAA+B;AAC3BF,IAAAA,SAAS,CAACE,SAAD,CAAT;AACH;;AACD,SACI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,aAAD;AAAe,IAAA,UAAU,EAAEH,MAA3B;AAAmC,IAAA,OAAO,EAAEE,WAA5C;AAAyD,IAAA,QAAQ,EAAEL,KAAK,CAACO,YAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,WAAD;AAAa,IAAA,IAAI,EAAEJ,MAAM,CAAC,CAAD,CAAzB;AAA8B,IAAA,QAAQ,EAAEH,KAAK,CAACO,YAA9C;AAA4D,IAAA,WAAW,EAAEP,KAAK,CAACQ,KAAN,CAAY,CAAZ,CAAzE;AAAyF,IAAA,OAAO,EAAER,KAAK,CAACS,OAAxG;AAAiH,IAAA,UAAU,EAAET,KAAK,CAACU,UAAnI;AAA+I,IAAA,IAAI,EAAEV,KAAK,CAACW,IAA3J;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAER,MAAM,CAAC,CAAD,CAA1B;AAA+B,IAAA,QAAQ,EAAEH,KAAK,CAACO,YAA/C;AAA6D,IAAA,WAAW,EAAEP,KAAK,CAACQ,KAAN,CAAY,CAAZ,CAA1E;AAA0F,IAAA,OAAO,EAAER,KAAK,CAACS,OAAzG;AAAkH,IAAA,MAAM,EAAET,KAAK,CAACU,UAAhI;AAA4I,IAAA,OAAO,EAAEV,KAAK,CAACW,IAA3J;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CADJ;AAOH;;AAED,eAAeZ,OAAf","sourcesContent":["import React,{useState} from 'react'\nimport SummaryHeader from './SummaryHeader'\nimport SummaryList from './SummaryList/SummaryList'\nimport SummaryChart from './SummaryChart/SummaryChart'\n\n\nfunction Summary(props){\n    const [toggle,setToggle] = useState([{\n        list:true,\n        chart:false\n    }])\n\n    function handeToggle(newToggle){\n        setToggle(newToggle)\n    }\n    return(\n        <div className=\"summary\">\n            <SummaryHeader viewToggle={toggle} handTog={handeToggle} userData={props.userExpenses} />\n            <SummaryList show={toggle[0]} userData={props.userExpenses} currentUser={props.users[1]} method4={props.method4} userMethod={props.userMethod} meth={props.meth} />\n            <SummaryChart show={toggle[0]} userData={props.userExpenses} currentUser={props.users[1]} method3={props.method4} method={props.userMethod} method2={props.meth}/>\n        </div>\n    )\n}\n\nexport default Summary"]},"metadata":{},"sourceType":"module"}